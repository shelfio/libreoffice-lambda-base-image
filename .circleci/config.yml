version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-ecr: circleci/aws-ecr@9.3.5
  docker: circleci/docker@2.1.3

parameters:
  node_image_tag:
    type: string
    default: '7.6-node20-x86_64'
  python_image_tag:
    type: string
    default: '7.6-python3.12-x86_64'

jobs:
  build_node:
    executor: 'aws-ecr/default'
    steps:
      - checkout
      - aws-ecr/build_image:
          dockerfile: Dockerfile.node20-x86_64
          no_output_timeout: 10m
          tag: << pipeline.parameters.node_image_tag >>
          region: ${AWS_DEFAULT_REGION}
          skip_when_tags_exist: false
          push_image: false
          repo: lambda-libreoffice-base

  build_python:
    executor: 'aws-ecr/default'
    steps:
      - checkout
      - aws-ecr/build_image:
          dockerfile: Dockerfile.python3_12-x86_64
          no_output_timeout: 10m
          tag: << pipeline.parameters.python_image_tag >>
          region: ${AWS_DEFAULT_REGION}
          skip_when_tags_exist: false
          push_image: false
          repo: lambda-libreoffice-base

workflows:
  build_and_push_images:
    jobs:
      - docker/hadolint:
          dockerfiles: Dockerfile.node20-x86_64,Dockerfile.python3_12-x86_64
          executor-class: medium
          ignore-rules: 'DL3033,SC3040,DL4006,DL3003,DL3032,SC2015,DL3041,SC2035'

      - build_node:
          context: prod-us
          filters:
            branches:
              only:
                - /feature\/.*/

      - build_python:
          context: prod-us
          filters:
            branches:
              only:
                - /feature\/.*/

      - aws-ecr/build_and_push_image:
          name: push_node_image
          auth:
            - aws-cli/setup
          context: prod-us
          executor: aws-ecr/default
          create_repo: false
          repo: lambda-libreoffice-base
          tag: << pipeline.parameters.node_image_tag >>
          dockerfile: Dockerfile.node20-x86_64
          no_output_timeout: 20m
          public_registry: true
          push_image: true
          region: ${AWS_DEFAULT_REGION}
          repo_scan_on_push: true
          skip_when_tags_exist: false
          account_id: AWS_ACCOUNT_ID
          public_registry_alias: shelf
          filters:
            branches:
              only:
                - master

      - aws-ecr/build_and_push_image:
          name: push_python_image
          auth:
            - aws-cli/setup
          context: prod-us
          executor: aws-ecr/default
          create_repo: false
          repo: lambda-libreoffice-base
          tag: << pipeline.parameters.python_image_tag >>
          dockerfile: Dockerfile.python3_12-x86_64
          no_output_timeout: 20m
          public_registry: true
          push_image: true
          region: ${AWS_DEFAULT_REGION}
          repo_scan_on_push: true
          skip_when_tags_exist: false
          account_id: AWS_ACCOUNT_ID
          public_registry_alias: shelf
          filters:
            branches:
              only:
                - master
